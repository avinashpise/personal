swagger: "2.0"

# Metadata
info:
  title: Request Validator API
  version: "1.0.0"
  description: Request validator API
host: discover.mobileconnect.io
basePath: /rv/v1/exchange/organizations
schemes:
  - https

# API Paths
paths:
  /{orgID}/validate:
    get:
      summary: Request Validator API
      description: >-
        Serving Operator service delivery platform receives the ‘Exchange client_id‘ and ‘Exchange client_secret‘ on applicable Authentication scheme.

        Serving Operator validates this Exchange credentials using the Serving Operator cache / Request Validator API call.

        The Serving Operator retrieves the Application and Developer data to allow on Authentication Scheme.


        **Pre-Requisites - Discovery Call**

         Before Request validator API call, make Discovery service call to obtain the ‘Exchange client_id and client_secret‘

      produces:
        - application/json
      parameters:
        - in: path
          name: orgID
          description: Server Operator Organization ID as created in the Exchange
          required: true
          type: string
        - in: query
          name: client_id
          description: Exchange Client-ID as returned in the Exchange-Discovery API for a valid operator
          required: true
          type: string
        - in: query
          name: client_secret
          description: Operatore id
          required: true
          type: string
        - name: Accept
          in: header
          description: Accept Type
          required: true
          type: string
          default: application/json
          enum:
            - application/json
            - application/xml
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/responses"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error400"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error401"
        404:
          description: Not_Found_Entity
          schema:
            $ref: "#/definitions/error404"
      security:
        - basicAuth: []

# Security Definitions
securityDefinitions:
  basicAuth:
    type: basic

# Definitions
definitions:
  cli_name:
    type: object
    description: It is a string representing the application client name.//json array
    properties:
      name:
        description: client name
        type: string
  app_name:
    type: object
    properties:
      name:
        description: application name
        type: string

  error400:
    type: object
    properties:
      error:
        type: string
        description: Invalid_Request
      description:
        type: string
        description: Invalid Client-ID

  error401:
    type: object
    properties:
      error:
        type: string
        description: |
          Error for missing authentication header : "Authentication Failed" | Error for Invalid Client Secret :  "Unauthorized_Access"
      description:
        type: string
        description: |
          Description for missing authentication header : "Authorization header missing" | Description for invalid client secret :  "Invalid Client Secret"

  error404:
    type: object
    properties:
      error:
        type: string
        description: >-
          Error for Invalid client_id : "Not_Found_Entity" | Error for Invalid/Unapproved orgID :  "Not_Found_Entity"
      description:
        type: string
        description: |
          Description for Invalid client_id  : "XCredential not found for x-client-id[client ID] and operator[Operator ID]" | Description for Invalid/Unapproved orgID :  "XCredential not found for x-client-id[client ID] and operator[Operator ID]"


  application:
    type: object
    description: JSON object wrapping the Application details.
    required:
      - tncStatus
    properties:
     appCredId:
      description: A unique Developer App Credential Identifier
      type: string

     devOrgId:
      type: string
      description: Developer Organization ID.
     devName:
      type: string
      description: Name of the developer

     devId:
      type: string
      description: Developer's Id
     appName:
      type: string
      description: Application name
     description:
      type: string
      description: Application Description
     appStatus:
      type: string
      description: Application's current status (APPROVED, UNAPPROVED, REVOKED or REJECTED)

     devStatus:
      type: string
      description:  Developer's current status (APPROVED, UNAPPROVED, REVOKED or REJECTED)
     developerType:
      type: string
      description:  Developer's current type (TRUSTED/UNTRUSTED).
     tncStatus:
      type: string
      description:  Serving Organization Terms and conditions accepted or unaccepted by the developer (ACCEPTED/UNACCEPTED).
     trustedMode:
      type: string
      
     appType:
      type: string
      description: Application's type (PRODUCTION or DEVELOPMENT)
      
     redirectUri:
      type: string
      description: Applications redirect URI
      
     supportedApis:
        type: array
        description: JSON Array of the APIs used by the Application
        items:
         $ref: "#/definitions/app_name"

  responses:
    type: object
    properties:
      x_client_id:
        type: string
        format: string
        description: The exchange client_id passed on in the validate call
      orgId:
        type: string
        format: string
        description: Serving Organization ID
      client_name:
        $ref: "#/definitions/cli_name"
      application:
        $ref: "#/definitions/application"
